ServerName localhost

LoadModule deflate_module /usr/local/apache2/modules/mod_deflate.so
# LoadModule proxy_module /usr/local/apache2/modules/mod_proxy.so
# LoadModule proxy_fcgi_module /usr/local/apache2/modules/mod_proxy_fcgi.so
LoadModule rewrite_module /usr/local/apache2/modules/mod_rewrite.so
LoadModule lua_module /usr/local/apache2/modules/mod_lua.so
LoadModule dbd_module /usr/local/apache2/modules/mod_dbd.so
LoadModule authn_dbd_module /usr/local/apache2/modules/mod_authn_dbd.so
LoadModule authz_dbd_module /usr/local/apache2/modules/mod_authz_dbd.so


# LoadModule authn_core_module modules/mod_authn_core.so
# LoadModule request_module /usr/local/apache2/modules/mod_request.so
# LoadModule auth_form_module modules/mod_auth_form.so
# LoadModule session_module modules/mod_session.so
# LoadModule session_dbd_module modules/mod_session_dbd.so
LoadModule ratelimit_module modules/mod_ratelimit.so

<VirtualHost *:80>
    # Connnect to the database
    DBDriver mysql
    DBDParams host=mariadb,user=user,pass=password,dbname=my_database



    # Prepare SQL statements
    DBDPrepareSQL "SELECT password_hash FROM users WHERE username = %s" check_password
    DBDPrepareSQL "INSERT INTO sessions (id, username, expiry) VALUES (%s, %s, %s)" insert_session
    DBDPrepareSQL "SELECT username FROM sessions WHERE id = %s AND expiry > UNIX_TIMESTAMP()" check_session
    # DBDPrepareSQL "SELECT groupname FROM user_groups WHERE username = %s" get_user_groups
    
    # Lua module configuration
    LuaPackagePath "/var/www/lib/?.lua;;"
    LuaPackageCPath "/usr/local/lib/lua/5.2/?.so;;"
    # LuaAuthzProvider group_authz /var/www/lib/authz_provider.lua check_group
    
    # Login URL
    <Location "/login">
        SetHandler lua-script
        LuaMapHandler /login /var/www/lib/login.lua
    </Location>

    # Set up settings for this directory
    <Directory /var/www/html/>
        # See https://chat.openai.com/c/29109705-00b0-480c-b535-20f0ab121c60
        # Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        Header always set Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none';"
        Header always set X-Frame-Options "SAMEORIGIN"
        Header always set X-Content-Type-Options "nosniff"
        Header always set Referrer-Policy "no-referrer-when-downgrade"

        # DirectoryIndex index.php
        # Options Indexes FollowSymLinks
        # Only allow rewrite in the .htaccess
        # AllowOverrideList RewriteEngine RewriteCond RewriteRule
        Require all granted
    </Directory>


    # Send apache logs to stdout and stderr
    CustomLog /proc/self/fd/1 common
    ErrorLog /proc/self/fd/2
    LogLevel debug dbd:trace8 lua:trace8

    # Serve files from here
    DocumentRoot /var/www/html/

    # Run lua scripts with mod_lua
    <Files "*.lua">
      SetHandler lua-script
      # Options +Includes
      AddType text/html .lua
      # AddOutputFilter INCLUDES .lua
    </Files>

    <Directory "/var/www/html/private">
        LuaHookAccessChecker /var/www/lib/access_checker.lua check_access
    </Directory>

    # index.lua
    DBDPrepareSQL "SELECT 'hooray for james!'" james

    # # login.lua
    # DBDPrepareSQL "DELETE FROM sessions WHERE id = %s" deletesession
    # DBDPrepareSQL "UPDATE sessions SET session_data = %s, expiry = %lld, id=%s WHERE id = %s" updatesession
    # DBDPrepareSQL "INSERT INTO sessions (session_data, expiry, id) VALUES (%s, %lld, %s)" insertsession
    # DBDPrepareSQL "SELECT session_data FROM sessions WHERE id = %s AND (expiry=0 or expiry > %lld)" selectsession
    # DBDPrepareSQL "DELETE FROM sessions WHERE (expiry !=0 and expiry < %lld)" cleansession

    # Session On
    # SessionDBDPerUser On
    # # XXX Add secure when using https.
    # SessionDBDCookieName session path=/;SameSite=lax;HttpOnly
    # <Directory "/var/www/html/private">
    #     AuthFormProvider dbd
    #     AuthType form
    #     AuthName "FormLogin"
    #     # AuthFormLoginRequiredLocation "/login.lua"
    #     # The data will just go in the database so perhaps we don't need this?
    #     # SessionCryptoPassphrase secret_phrase
    #     ErrorDocument 401 /login.lua
    #     AuthDBDUserPWQuery "select password_hash from users where username = %s"

    #     #Require env SESSION
    #     Require valid-user
    # </Directory>
    # <Location "/login.lua">
    #     SetOutputFilter RATE_LIMIT
    #     SetEnv rate-limit 500
    #     SetEnv rate-initial-burst 5
    # </Location>
    # <Location "/logout">
    #     SetHandler form-logout-handler
    #     # Must match
    #     AuthName "FormLogin"
    #     AuthFormLogoutLocation "/"
    #     SessionMaxAge 1
    # </Location>

    # # <Directory "/var/www/html/private">
    # #     AuthType Basic
    # #     AuthName "Restricted Area"
    # #     AuthBasicProvider dbd
    # #     # Use prepared statement for authentication
    # #     AuthDBDUserPWQuery "select password_hash from users where username = %s"
    # #     # Optionally, if using groups
    # #     # AuthDBDUserRealmQuery "authorize_user"
    # #     Require valid-user
    # #     # For group-based authorization, use: Require dbd-group groupname
    # #     # What about caching? https://httpd.apache.org/docs/2.4/mod/mod_authn_dbd.html	
    # # </Directory>

</VirtualHost>
