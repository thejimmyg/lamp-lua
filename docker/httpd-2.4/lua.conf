ServerName localhost

LoadModule deflate_module /usr/local/apache2/modules/mod_deflate.so
# LoadModule proxy_module /usr/local/apache2/modules/mod_proxy.so
# LoadModule proxy_fcgi_module /usr/local/apache2/modules/mod_proxy_fcgi.so
LoadModule rewrite_module /usr/local/apache2/modules/mod_rewrite.so
LoadModule lua_module /usr/local/apache2/modules/mod_lua.so
LoadModule dbd_module /usr/local/apache2/modules/mod_dbd.so
LoadModule authn_dbd_module /usr/local/apache2/modules/mod_authn_dbd.so
LoadModule authz_dbd_module /usr/local/apache2/modules/mod_authz_dbd.so

<VirtualHost *:80>

    DBDriver mysql
    DBDParams host=mariadb,user=user,pass=password,dbname=my_database
    DBDPrepareSQL "SELECT 'hooray for james!'" james
    # DBDPrepareSQL "SELECT groupname FROM user_groups WHERE username = ?" authorize_user
    LogLevel debug

    DocumentRoot /var/www/html/

    <Files "*.lua">
      SetHandler lua-script
      # Options +Includes
      AddType text/html .lua
      # AddOutputFilter INCLUDES .lua
    </Files>


    <Directory /var/www/html/>
        # DirectoryIndex index.php
        # Options Indexes FollowSymLinks
        # Only allow rewrite in the .htaccess
        # AllowOverrideList RewriteEngine RewriteCond RewriteRule
        Require all granted
    </Directory>

    <Directory "/var/www/html/private">
        AuthType Basic
        AuthName "Restricted Area"
        AuthBasicProvider dbd

        # Use prepared statement for authentication
        AuthDBDUserPWQuery "select password_hash from users where username = %s"

        # Optionally, if using groups
        # AuthDBDUserRealmQuery "authorize_user"

        Require valid-user
        # For group-based authorization, use: Require dbd-group groupname

        # What about caching? https://httpd.apache.org/docs/2.4/mod/mod_authn_dbd.html	
    </Directory>

    # Send apache logs to stdout and stderr
    CustomLog /proc/self/fd/1 common
    ErrorLog /proc/self/fd/2
</VirtualHost>
